AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  CloudFormation template for setting up an environment for a Hydra on SageMaker project, including necessary IAM roles,
  S3 buckets for data and config, an ECR repository, and a KMS key for encryption.

Resources:
  HydraSageMakerKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS key for encrypting S3 buckets for Hydra on SageMaker

  HydraSageMakerKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/HydraSageMakerKey
      TargetKeyId: !Ref HydraSageMakerKMSKey


  DataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub hydra-sample-data-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref HydraSageMakerKMSKey
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  DataBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref DataBucket
      PolicyDocument:
        Statement:
          - Sid: EnforceHttpsTransport
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !GetAtt DataBucket.Arn
              - !Sub '${DataBucket.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub hydra-sample-config-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref HydraSageMakerKMSKey
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  ConfigBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument:
        Statement:
          - Sid: EnforceHttpsTransport
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !GetAtt ConfigBucket.Arn
              - !Sub '${ConfigBucket.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

  SageMakerECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: hydra-sm-artifact
      ImageScanningConfiguration:
        ScanOnPush: true
      EncryptionConfiguration:
        EncryptionType: KMS

  SageMakerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: hydra-sample-sagemaker
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SageMakerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - ecr:BatchGetImage
                  - ecr:Describe*
                  - ecr:GetDownloadUrlForLayer
                Resource:
                  - !GetAtt SageMakerECRRepository.Arn
                Effect: Allow
              - Action:
                  - ecr:GetAuthorizationToken
                Resource:
                  - "*"
                Effect: Allow
              - Action:
                  - logs:CreateLogDelivery
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DeleteLogDelivery
                  - logs:Describe*
                  - logs:GetLogDelivery
                  - logs:GetLogEvents
                  - logs:ListLogDeliveries
                  - logs:PutLogEvents
                  - logs:PutResourcePolicy
                  - logs:UpdateLogDelivery
                Resource: '*'
                Effect: Allow
              - Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !GetAtt DataBucket.Arn
                  - !GetAtt ConfigBucket.Arn
                  - !Sub 'arn:aws:s3:::${DataBucket}/*'
                  - !Sub 'arn:aws:s3:::${ConfigBucket}/*'
                Effect: Allow
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                # Assuming the KMS Key resource in your CloudFormation template is named HydraSageMakerKMSKey
                Resource: !GetAtt HydraSageMakerKMSKey.Arn
